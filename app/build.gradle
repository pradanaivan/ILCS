buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
def getProperty(String filename, String propName) {
    def propsFile = rootProject.file(filename)
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        if (props[propName] != null) {
            return props[propName]
        } else {
            print("No such property " + propName + " in file " + filename);
        }
    } else {
        print(filename + " does not exist!")
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    useLibrary 'org.apache.http.legacy'
    lintOptions {
        disable "ResourceType"
        checkReleaseBuilds false
        abortOnError false
    }
    signingConfigs {
        signingKey {
            keyAlias 'keys'
            keyPassword '1234509876'
            storePassword '1234509876'
            storeFile file('/Users/mmdc/Documents/dev/android/workAS/IKTApps/keystore.jks')
        }
    }
    compileSdkVersion 25
    buildToolsVersion '25.0.0'
    defaultConfig {
        multiDexEnabled true
        applicationId "com.ikt.main.to"
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 5
        versionName "1.2.1"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.signingKey
            proguardFile '/Users/mmdc/Documents/dev/android/workAS/IKTApps/app/proguard-rules.pro'
        }
    }
    productFlavors {
        production {
            minSdkVersion 14
            applicationId 'com.ikt.main.to'
            targetSdkVersion 25
            manifestPlaceholders = [appName: "IKT App"]
            versionCode 5
            versionName "1.2.1"
            signingConfig signingConfigs.signingKey
            multiDexEnabled true
            buildConfigField "String", "ENDPOINT_CARTOS", "\"${getProperty("local.properties", "ENDPOINT_CARTOS_PRODUCTION")}\""
            buildConfigField "String", "ENDPOINT_REFERENCE", "\"${getProperty("local.properties", "ENDPOINT_REFERENCE_PRODUCTION")}\""
        }
        staging {
            minSdkVersion 14
            applicationId 'com.ikt.main.to'
            targetSdkVersion 25
            versionCode 5
            manifestPlaceholders = [appName: "IKT App STAGING"]
            versionName "1.2.1"
            signingConfig signingConfigs.signingKey
            multiDexEnabled true
            buildConfigField "String", "ENDPOINT_CARTOS", "\"${getProperty("local.properties", "ENDPOINT_CARTOS_STAGING")}\""
            buildConfigField "String", "ENDPOINT_REFERENCE", "\"${getProperty("local.properties", "ENDPOINT_REFERENCE_STAGING")}\""
        }
        stagingIntra {
            minSdkVersion 14
            applicationId 'com.ikt.main.to'
            manifestPlaceholders = [appName: "IKT App STAGING INTRA"]
            signingConfig signingConfigs.signingKey
            targetSdkVersion 25
            versionCode 5
            versionName "1.2.1"
            multiDexEnabled true
            buildConfigField "String", "ENDPOINT_CARTOS", "\"${getProperty("local.properties", "ENDPOINT_CARTOS_STAGING_INTRA")}\""
            buildConfigField "String", "ENDPOINT_REFERENCE", "\"${getProperty("local.properties", "ENDPOINT_REFERENCE_STAGING_INTRA")}\""

        }
        productionIntra {
            minSdkVersion 14
            applicationId 'com.ikt.main.to'
            signingConfig signingConfigs.signingKey
            manifestPlaceholders = [appName: "IKT App INTRA"]
            targetSdkVersion 25
            versionCode 5
            versionName "1.2.1"
            multiDexEnabled true
            buildConfigField "String", "ENDPOINT_CARTOS", "\"${getProperty("local.properties", "ENDPOINT_CARTOS_PRODUCTION_INTRA")}\""
            buildConfigField "String", "ENDPOINT_REFERENCE", "\"${getProperty("local.properties", "ENDPOINT_REFERENCE_PRODUCTION_INTRA")}\""

        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.intellij:annotations:+@jar'
    compile 'com.android.support:appcompat-v7:25.1.1'
    compile 'com.google.android.gms:play-services:8.4.0'
    compile 'com.android.support:design:25.1.1'
    compile 'com.android.support:support-v4:25.1.1'
    compile 'com.android.support:cardview-v7:25.1.1'
    compile 'com.android.support:recyclerview-v7:25.1.1'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    // compile 'com.github.traex.rippleeffect:library:1.3'
    compile 'com.astuetz:pagerslidingtabstrip:1.0.1'
    compile 'joda-time:joda-time:2.9.3'
    compile 'com.android.support:multidex:1.0.1'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }
    compile('com.crashlytics.sdk.android:crashlytics-ndk:1.1.2@aar') {
        transitive = true;
    }
    compile 'com.code-troopers.betterpickers:library:3.1.0'
    compile 'com.rengwuxian.materialedittext:library:2.1.4'
    compile 'com.journeyapps:zxing-android-embedded:3.5.0'

    // Satrio
    compile 'com.intuit.sdp:sdp-android:1.0.4'
    compile 'com.intuit.ssp:ssp-android:1.0.4'
}

crashlytics {
    enableNdk true
    androidNdkOut 'src/main/obj'
    androidNdkLibsOut 'src/main/libs'
}
